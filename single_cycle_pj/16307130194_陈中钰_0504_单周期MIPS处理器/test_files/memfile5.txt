#		Assembly			Description						Address		Machine		Binary
main:	addi $2, $0, 5		# initialize $2 = 5				0			20020005
		ori  $3, $0, 12		# initialize $3 = 12 			4			3403000c
		xori $7, $3, 15		# initialize $7 = 3				8			3867000f
		or	 $4, $7, $2		# $4 = (3 OR 5) = 7				c			00e22025
		and	 $5, $3, $4		# $5 = (12 AND 7) = 4			10			00642824
		add	 $5, $5, $4		# $5 = 4 + 7 = 11				14			00a42820
		beq	 $5, $7, end	# shouldn't be taken			18			10a7000a
		slti $4, $3, 7		# $4 = 12 < 7 = 0				1c			28640007
		beq	 $4, $0, around	# should be taken				20			10800001
		addi $5, $0, 0		# shouldn't happen				24			20050000
around: slt  $4, $7, $2		# $4 = 3 < 5 = 1				28			00e2202a
		andi $7, $3, 15		# $7 = 12 & 15 = 12				2c			3067000f
		sub  $7, $7, $2		# $7 = 12 - 5 = 7				30			00e23822
		sw	 $7, 68($3)		# [80] = 7						34			ac670044
		lw	 $2, 80($0)		# $2 = [80] = 7					38			8c020050
		j	 end 			# should be taken 				3c			08000011
		addi $2, $0, 1		# shouldn't be taken 			40			20020001
end:	sll	 $9, $2, 29		# $9 = 7 << 29 = e0...0			44			00024f40	000000 00000 00010 01001 11101 000000
		nop					# no operation					48			00000000
		bne	 $2, $3, skip	# should be taken				4c			14a70001
		sw	 $4, 81($2)		# not write mem[88] = 1			50			ac440051
skip:	sra	 $4, $9, 29		# $4 = e0...0 >> 29 = f...f		54			00092743	000000 00000 01001 00100 11101 000011
		xor	 $8, $2, $3		# $8 = 7 ^ 12 = 11				58			00434026
		nor	 $1, $3, $2		# $1 = ~(12 | 7) = f...f0 		5c			00620827	000000 00011 00010 00001 00000 100111
		srl	 $5, $9, 29		# $5 = e0...0 >> 29 = 7			60			00092f42	000000 00000 01001 00101 11101 000010
		
# include: addi, and, or, add, sub, beq, slt, sw, lw, j, andi, ori, slti, nop, bne, xor, xori, nor
# add instr: sll, srl, sra

# widen the width of alucont!
# add an output of "extend" to the control unit, use signal extend to determine sign/zero extend!(ex: addi is sign extend, andi is zero extend)
# in regfile module, R-type instr are divided into 2 kinds!
# >>> is not sra, so i use case to brute force SRA instead