#		Assembly			Description				Address		Machine		Binary
main:	addi $2, $0, 5		# initialize $2 = 5		0			20020005
		ori  $3, $0, 12		# initialize $3 = 12 	4			3403000c	001101 00000 00011 0000 0000 0000 1100
		addi $7, $3, -9		# initialize $7 = 3		8			2067fff7
		or	 $4, $7, $2		# $4 = (3 OR 5) = 7		c			00e22025
		and	 $5, $3, $4		# $5 = (12 AND 7) = 4	10			00642824
		add	 $5, $5, $4		# $5 = 4 + 7 = 11		14			00a42820
		beq	 $5, $7, end	# shouldn't be taken	18			10a7000a
		slti $4, $3, 7		# $4 = 12 < 7 = 0		1c			28640007	001010 00011 00100 0000 0000 0000 0111
		beq	 $4, $0, around	# should be taken		20			10800001
		addi $5, $0, 0		# shouldn't happen		24			20050000
around: slt  $4, $7, $2		# $4 = 3 < 5 = 1		28			00e2202a
		andi $7, $3, 15		# $7 = 12 & 15 = 12		2c			3067000f	001100 00011 00111 0000 0000 0000 1111
		sub  $7, $7, $2		# $7 = 12 - 5 = 7		30			00e23822
		sw	 $7, 68($3)		# [80] = 7				34			ac670044
		lw	 $2, 80($0)		# $2 = [80] = 7			38			8c020050	100011 00000 00010 0000 0000 0101 0000
		j	 end 			# should be taken 		3c			08000011
		addi $2, $0, 1		# shouldn't be taken 	40			20020001
end:	sw	 $2, 84($0)		# write mem[84] = 7		44			ac020054
		nop					# no operation			48			00000000	000000 00000 00000 0000 0000 0000 0000
		bne	 $2, $3, skip	# should be taken		4c			14a70001	000101 00101 00111 0000 0000 0000 0001
		sw	 $4, 81($2)		# not write mem[88] = 1	50			ac440051	101011 00010 00100 0000 0000 0101 0001
skip:	lw	 $1, 72($3)		# $1 = [84] = 7			54			8c610048	100011 00011 00001 0000 0000 0100 1000
		
# include: addi, and, or, add, sub, beq, slt, sw, lw, j, andi, ori, slti, nop
# add instr: bne

# i also notice that nop is not exactly "do nothing", it would set reg[0] = 0, but it's fine